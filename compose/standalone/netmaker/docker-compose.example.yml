# version: "3.4"

# source code URL=https://github.com/gravitl/netmaker/blob/master/compose/docker-compose.yml

services:

  netclient:
    container_name: netclient
    image: gravitl/netclient:v0.24.1
    env_file: /media/justsave/docker/env/netmaker/cloudflare/netmaker-client.env
    # privileged: true
    pid: host
    ipc: host
    network_mode: host
    cap_add:
      - ALL
    security_opt:
      - apparmor=unconfined
    volumes:
      - /media/justsave/docker/volume/netmaker/cloudflare/etc/netclient:/etc/netclient
    restart: always

  netmaker:
    container_name: netmaker
    image: gravitl/netmaker:v0.24.1
    env_file: /media/justsave/docker/env/netmaker/cloudflare/netmaker.env
    restart: always
    volumes:
      # storage for mqtt
      - /media/justsave/docker/volume/netmaker/cloudflare/dnsconfig:/root/config/dnsconfig
      - /media/justsave/docker/volume/netmaker/cloudflare/sqldata:/root/data
    environment:
      # config-dependant vars
      - STUN_LIST=stun.miwifi.com:3478,stun1.netmaker.io:3478,stun2.netmaker.io:3478,stun1.l.google.com:19302,stun2.l.google.com:19302
      # The domain/host IP indicating the mq broker address
      - BROKER_ENDPOINT=wss://broker.example.com # For EMQX broker use `BROKER_ENDPOINT=wss://broker.${NM_DOMAIN}/mqtt`
      # For EMQX broker (uncomment the two lines below)
      #- BROKER_TYPE=emqx
      #- EMQX_REST_ENDPOINT=http://mq:18083
      # The base domain of netmaker
      - SERVER_NAME=example.com
      - SERVER_API_CONN_STRING=api.example.com:443
      # Address of the CoreDNS server. Defaults to SERVER_HOST
      # - COREDNS_ADDR=${SERVER_HOST}
      # Overrides SERVER_HOST if set. Useful for making HTTP available via different interfaces/networks.
      - SERVER_HTTP_HOST=api.example.com
    ports:
      - "127.0.0.1:28031:8081"

  netmaker_ui:
    container_name: netmaker-ui
    image: gravitl/netmaker-ui:v0.24.1
    env_file: /media/justsave/docker/env/netmaker/cloudflare/netmaker.env
    environment:
      # config-dependant vars
      # URL where UI will send API requests. Change based on SERVER_HOST, SERVER_HTTP_HOST, and API_PORT
      BACKEND_URL: "https://api.example.com"
    depends_on:
      - netmaker
    ports:
      - "127.0.0.1:28030:80"
    links:
      - "netmaker:api"
    restart: always

  # caddy:
  #   image: caddy:2.6.2
  #   container_name: caddy
  #   env_file: /media/justsave/docker/env/netmaker/cloudflare/netmaker.env
  #   restart: unless-stopped
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - ./Caddyfile:/etc/caddy/Caddyfile
  #     # storage for Caddy
  #     - /media/justsave/docker/volume/netmaker/cloudflare/caddy/data:/data
  #     - /media/justsave/docker/volume/netmaker/cloudflare/caddy/conf:/config
  #   ports:
  #     - "80:80"
  #     - "443:443"

  coredns:
    #network_mode: host
    container_name: coredns
    image: coredns/coredns:1.10.1
    command: -conf /root/dnsconfig/Corefile
    env_file: /media/justsave/docker/env/netmaker/cloudflare/netmaker.env
    restart: always
    depends_on:
      - netmaker
    volumes:
      # storage for mqtt
      - /media/justsave/docker/volume/netmaker/cloudflare/dnsconfig:/root/dnsconfig
    ports:
      - "127.0.0.1:5554:53/udp"

  mq:
    container_name: mq
    image: eclipse-mosquitto:2.0.15-openssl
    env_file: /media/justsave/docker/env/netmaker/cloudflare/netmaker.env
    depends_on:
      - netmaker
    restart: unless-stopped
    command: [ "/mosquitto/config/wait.sh" ]
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./wait.sh:/mosquitto/config/wait.sh
      # storage for mqtt
      - /media/justsave/docker/volume/netmaker/cloudflare/mosquitto/logs:/mosquitto/log
      - /media/justsave/docker/volume/netmaker/cloudflare/mosquitto/data:/mosquitto/data
    ports:
      - "127.0.0.1:28033:8883"

